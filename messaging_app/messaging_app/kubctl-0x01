#!/bin/bash

# Script: kubctl-0x01
# Purpose: Scale Django app in Kubernetes and test performance

# Set deployment and service names
DEPLOYMENT_NAME="messaging-app-deployment"
SERVICE_NAME="messaging-app-service"
NAMESPACE="default"

echo "üìà Scaling deployment '$DEPLOYMENT_NAME' to 3 replicas..."
kubectl scale deployment $DEPLOYMENT_NAME --replicas=3 --namespace=$NAMESPACE

echo "‚è≥ Waiting for pods to become ready..."
sleep 10

echo "üîç Checking running pods..."
kubectl get pods -l app=messaging-app --namespace=$NAMESPACE

echo "üåê Getting ClusterIP service details..."
CLUSTER_IP=$(kubectl get service $SERVICE_NAME -o jsonpath='{.spec.clusterIP}' --namespace=$NAMESPACE)
PORT=$(kubectl get service $SERVICE_NAME -o jsonpath='{.spec.ports[0].port}' --namespace=$NAMESPACE)

if [ -z "$CLUSTER_IP" ]; then
  echo "‚ùå Service IP not found. Make sure the service exists."
  exit 1
fi

echo "‚úÖ Service is available at $CLUSTER_IP:$PORT"

echo "üöÄ Running load test using wrk..."

# Note: wrk must be installed and this script should run in a pod or node that can reach the ClusterIP (e.g., via `kubectl run`)
wrk -t4 -c20 -d10s http://$CLUSTER_IP:$PORT/

echo "üìä Monitoring resource usage with kubectl top..."

# Check if metrics-server is installed
if ! kubectl top pods &>/dev/null; then
  echo "‚ùå 'kubectl top' requires metrics-server. Please install it first."
else
  kubectl top pods --namespace=$NAMESPACE
fi
